name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          pip install -r requirements.txt  # Install your app dependencies

      - name: Run tests
        run: |
          pytest tests  # Run the tests in the tests directory

  build:
    runs-on: ubuntu-latest
    needs: test  

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          pip install flake8  # Install linter
          pip install -r requirements.txt  # Install your app dependencies

      - name: Lint code
        run: |
          flake8 app.py  # Lint your application code

      - name: Lint and validate Kubernetes manifests
        run: |
          curl -sSL https://github.com/instrumenta/kubeval/releases/latest/download/kubeval-linux-amd64 -o kubeval
          chmod +x kubeval
          ./kubeval k8s/*.yaml  # Validate your Kubernetes manifests

  docker:
    runs-on: ubuntu-latest
    needs: build  

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: |
          docker build -t jaycynth/flask-app:v0.1 .

      - name: Push Docker image
        run: |
          docker push jaycynth/flask-app:v0.1

  deploy:
    runs-on: ubuntu-latest
    needs: docker  

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Kubernetes
        uses: azure/setup-kubectl@v1
        with:
          version: 'latest'

      - name: Configure Kubernetes context
        run: |
          echo "${{ secrets.KUBE_CONFIG }}" > kubeconfig
          export KUBECONFIG=kubeconfig

      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f k8s/deployment.yaml
          kubectl apply -f k8s/service.yaml
